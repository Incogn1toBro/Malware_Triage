#Getting the values of registry run keys
$sysKeys = "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run", "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce"
    ForEach ($key in $sysKeys){
        Get-ItemProperty Registry::$key
    }

#Creating an array of user profiles and their SIDs
$users = (Get-WmiObject Win32_UserProfile | Where-Object { $_.SID -notmatch 'S-1-5-(18|19|20).*'})
$userPaths = $users.localpath
$userSIDs = $users.sid
    for ($counter=0; $counter -lt $users.length; $counter++){
        $path = $users[$counter].localpath
        $sid = $users[$counter].sid
        reg load hku\$sid $path\ntuser.dat
    }
Get-ItemProperty Registry::\hku\*\software\microsoft\windows\currentversion\run;
Get-ItemProperty Registry::\hku\*\software\microsoft\windows\currentversion\runonce;
    foreach($key in $sysKeys){
        Get-ItemProperty Registry::$key
    }

#Checking for installed services
Get-WmiObject win32_service | select Name, DisplayName | Format-List

#Checking for scheduled tasks
$tasks = Get-ChildItem "C:\Windows\System32\Tasks" -Recurse
    foreach($task in $tasks){
        Write-Host "`r`n[+] Task: $task"
        Write-Host "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++`r`n"
        Get-Content $task -ErrorAction SilentlyContinue | Select-String -Pattern '<Command>' -SimpleMatch
    }

#WMI Subscriptions
Write-Host "`r`n[+] WMI Subscriptions:`r`n"
Write-Host "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++`r`n"
Get-WmiObject -Namespace root/Subscription -Class __EventFilter

#Start Up Folders
Write-Host "`r`n[+] Startup Folder Contents:`r`n"
Write-Host "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++`r`n"
$path = 'C:\Users\*\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\*'
Get-ChildItem $path | Where-Object {$_.name -ne 'desktop.ini'}

#Checking User Logons
Write-Host "`r`n[+] Terminal Services Logons:`r`n"
Write-Host "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++`r`n"
$Before = Get-Date 2024/10/01; #Change date to suite your investigation period
$After = Get-Date 2024/10/08;
Get-WinEvent -FilterHashtable @{LogName='Security'; StartTime=$Before; EndTime=$After; Id='4624'} | where {$_.Message -match "Logon Type:\s+10"} | select TimeCreated,Message

#Locating Secondary Stages of Malware Infection
Write-Host "`r`n[+] Recently Written Files:`r`n"
Write-Host "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++`r`n"
$recentFiles = Get-ChildItem -Path C:\ -Filter *.exe -Recurse -ErrorAction SilentlyContinue -Force | ?{$_.LastWriteTime -gt (Get-Date).AddDays(-7)} | select -exp FullName
    foreach($file in $recentFiles){
        Write-Host $file
    }

#Checking for NTFS Alternate Data Streams
Write-Host "`r`n[+] Files with ADS:`r`n"
Write-Host "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++`r`n"
    foreach($file in $recentFiles){
        Get-Item $file -stream * | Where-Object stream -ne ':Data'
    }